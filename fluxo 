Gestão de Consultas 
Gestão de Pacientes
Gestão de INVENTÁRIO 
Gestão de Cirurgias 
Gestão de Clientes( Animais, Clientes e Pedidos de Contacto)
Gestão de Utilizadores 
Gestão de Colaboradores/Veterinários
Gestão de Empresa 
API de tickets 
API de inteligencia artificial 
Inventário( Stock, Stock em tempo real e localização de stock)
Reposição( Alertas)
gestão de Fornecedores
Gestão de Armazens e encomendas a fornecedores



---------------------------------------------------

Como rececionista, pretendo gerir pacientes, cirurgias, consultas 



---------------------------------------------------
🔹 Etapa 1 — Setup Base
 Criar repositórios Git (backend, frontend, mobile).
 Configurar Docker + PostgreSQL.
 Setup inicial do NestJS (estrutura modular).
 Configurar autenticação JWT + RBAC (roles: admin, vet, receção, suporte).




🔹 Etapa 2 — Backend (NestJS)
 Criar UsersModule (CRUD utilizadores + permissões).
 Criar PatientsModule (CRUD pacientes com histórico apenas cirúrgico).
 Criar SurgeryModule (agenda bloco, iniciar cirurgia, checklist multi-step).
 Criar InventoryModule (stock, reposição, alertas, QR).
 Criar TicketsModule (chatbot + suporte).



🔹 Etapa 3 — Frontend (React)
 Criar layout base (login, dashboard, sidebar).
 Implementar páginas: Pacientes, Cirurgias, Inventário, Tickets.



🔹 Etapa 4 — Mobile (React Native)
 Login + autenticação JWT.
 Agenda de cirurgias.
 QR Code scanner (packs e stock).
 Notificações push (alertas stock e cirurgias).


 
🔹 Etapa 5 — Infra e Qualidade
 Configurar CI/CD (GitHub Actions).
 Testes básicos (unitários e integração).
 Deploy inicial em ambiente de staging.